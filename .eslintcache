[{"C:\\Users\\kezhe\\OneDrive\\Desktop\\rest-countries-API\\countries-api\\src\\index.js":"1","C:\\Users\\kezhe\\OneDrive\\Desktop\\rest-countries-API\\countries-api\\src\\App.js":"2","C:\\Users\\kezhe\\OneDrive\\Desktop\\rest-countries-API\\countries-api\\src\\reportWebVitals.js":"3","C:\\Users\\kezhe\\OneDrive\\Desktop\\rest-countries-API\\countries-api\\src\\component\\Header.jsx":"4","C:\\Users\\kezhe\\OneDrive\\Desktop\\rest-countries-API\\countries-api\\src\\component\\Content.jsx":"5","C:\\Users\\kezhe\\OneDrive\\Desktop\\rest-countries-API\\countries-api\\src\\component\\Region.jsx":"6","C:\\Users\\kezhe\\OneDrive\\Desktop\\rest-countries-API\\countries-api\\src\\component\\CountryList.jsx":"7","C:\\Users\\kezhe\\OneDrive\\Desktop\\rest-countries-API\\countries-api\\src\\component\\CountryItem.jsx":"8","C:\\Users\\kezhe\\OneDrive\\Desktop\\rest-countries-API\\countries-api\\src\\component\\CountryInner.jsx":"9"},{"size":618,"mtime":1613764879140,"results":"10","hashOfConfig":"11"},{"size":1483,"mtime":1613849506835,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":3456,"mtime":1613849452954,"results":"14","hashOfConfig":"11"},{"size":819,"mtime":1613767263731,"results":"15","hashOfConfig":"11"},{"size":3784,"mtime":1613742805586,"results":"16","hashOfConfig":"11"},{"size":2644,"mtime":1613767374749,"results":"17","hashOfConfig":"11"},{"size":1497,"mtime":1613764664034,"results":"18","hashOfConfig":"11"},{"size":7313,"mtime":1613849540574,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1rujwgz",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\kezhe\\OneDrive\\Desktop\\rest-countries-API\\countries-api\\src\\index.js",["43"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {  BrowserRouter , BrowserRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <BrowserRouter >\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["44","45"],"C:\\Users\\kezhe\\OneDrive\\Desktop\\rest-countries-API\\countries-api\\src\\App.js",[],"C:\\Users\\kezhe\\OneDrive\\Desktop\\rest-countries-API\\countries-api\\src\\reportWebVitals.js",[],"C:\\Users\\kezhe\\OneDrive\\Desktop\\rest-countries-API\\countries-api\\src\\component\\Header.jsx",["46"],"C:\\Users\\kezhe\\OneDrive\\Desktop\\rest-countries-API\\countries-api\\src\\component\\Content.jsx",["47","48"],"import React, { Component } from 'react';\r\nimport { withRouter  } from 'react-router-dom';\r\nimport CountryInner from './CountryInner';\r\nimport CountryList from './CountryList';\r\nimport Region from './Region';\r\n\r\nclass Content extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            regionType : 'all'\r\n         }\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <React.Fragment>        \r\n                <Region />\r\n                {\r\n                    this.props.location.region == undefined\r\n                    ? <CountryList regionType={this.state.regionType} />\r\n                    : <CountryList regionType={this.props.location.region} />\r\n                }\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n\r\nexport default withRouter(Content); ","C:\\Users\\kezhe\\OneDrive\\Desktop\\rest-countries-API\\countries-api\\src\\component\\Region.jsx",["49","50"],"import React, { Component } from 'react';\r\nimport { Link , withRouter  } from 'react-router-dom';\r\n\r\nclass Region extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            countrys : document.getElementsByClassName('country-item'),\r\n            searchValue : ''\r\n         }\r\n    } \r\n     \r\n    handleClick = e => {\r\n        let dropdown = e.target.parentNode\r\n        let dropdownMenu = dropdown.getElementsByClassName('dropdown-content') ; \r\n        dropdown.classList.toggle('active');\r\n        dropdownMenu[0].classList.toggle('active');\r\n    }\r\n\r\n    searchFocus = e => {\r\n        this.setState({\r\n            searchValue : e.target.value.toUpperCase()\r\n        }) \r\n        const countrys = this.state.countrys;\r\n        for( let i=0; i<countrys.length; i++) { \r\n            var txt = countrys[i].getElementsByClassName('country-item__title')[0].innerText.toUpperCase();\r\n            if( e.target.value.toUpperCase() == '' ){\r\n                countrys[i].classList.remove('d-none')\r\n            }else if( txt.includes(e.target.value.toUpperCase()) ){\r\n                countrys[i].classList.remove('d-none')\r\n            }else{\r\n                countrys[i].classList.add('d-none')\r\n            }\r\n        }\r\n        if( document.getElementsByClassName('country-item d-none').length == 250 ){\r\n            document.getElementById('notFound').classList.add('d-block')\r\n        }else{\r\n            document.getElementById('notFound').classList.remove('d-block')\r\n        }\r\n    }\r\n \r\n    render() { \r\n        const regionList = [ 'Africa' , 'Americas', 'Asia' , 'Europe' , 'Oceania' ];\r\n        return ( \r\n            <div className=\"region-head w-100 my-5\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-between\">\r\n                        <div className=\"search\">\r\n                            <button className=\"search-btn\">\r\n                                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                            <input type=\"text\" className=\"search-input\" placeholder=\"Search for a country...\" onFocus={this.searchFocus} onChange={this.searchFocus} />\r\n                        </div>\r\n\r\n                        <div className=\"dropdown\">\r\n                            <div className=\"dropdown-head\" onClick={this.handleClick} >\r\n                                <span className=\"dropdown-title\" onClick = {(event) => event.stopPropagation()}>Filter by Region</span>\r\n                                <i className=\"fa fa-caret-down\" aria-hidden=\"false\" onClick = {(event) => event.stopPropagation()} ></i>\r\n                            </div>\r\n                            <div className=\"dropdown-content\">\r\n                                <ul className=\"dropdown-list\">\r\n                                    {\r\n                                        regionList.map( (item , i ) => (\r\n                                            <li key={i} >\r\n                                                <Link  to={{\r\n                                                    pathname: `/region/${item}`,\r\n                                                    region: `${item}`\r\n                                                    }} >\r\n                                                        {item} \r\n                                                </Link >   \r\n                                            </li> \r\n                                        ))\r\n                                    }\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default withRouter(Region)","C:\\Users\\kezhe\\OneDrive\\Desktop\\rest-countries-API\\countries-api\\src\\component\\CountryList.jsx",["51","52","53","54","55"],"import React, { Component } from 'react';\r\nimport {  withRouter  } from 'react-router-dom';\r\nimport CountryItem from './CountryItem';\r\n\r\nclass CountryList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            regionType : this.props.regionType\r\n          };\r\n        }\r\n        componentDidUpdate(prevProps,prevState) {\r\n          if(prevProps.regionType != this.props.regionType && this.props.regionType != 'all' ){\r\n            fetch(`https://restcountries.eu/rest/v2/region/${this.props.regionType}`)\r\n            .then(res => res.json())\r\n            .then(\r\n              (result) => {\r\n                this.setState({\r\n                  isLoaded: true,\r\n                  items: result\r\n                });\r\n              },\r\n            )\r\n          }else if( prevProps.regionType != 'all' && this.props.regionType == 'all' ){\r\n            fetch(`https://restcountries.eu/rest/v2/${this.props.regionType}`)\r\n            .then(res => res.json())\r\n            .then(\r\n              (result) => {\r\n                this.setState({\r\n                  isLoaded: true,\r\n                  items: result\r\n                });\r\n              },\r\n            )\r\n          }\r\n        }\r\n        componentDidMount() {\r\n          if( this.state.regionType == \"all\"){\r\n            fetch(`https://restcountries.eu/rest/v2/${this.props.regionType}`)\r\n            .then(res => res.json())\r\n            .then(\r\n              (result) => {\r\n                this.setState({\r\n                  isLoaded: true,\r\n                  items: result\r\n                });\r\n              },\r\n            )\r\n          }else{\r\n            fetch(`https://restcountries.eu/rest/v2/region/${this.props.regionType}`)\r\n            .then(res => res.json())\r\n            .then(\r\n              (result) => {\r\n                this.setState({\r\n                  isLoaded: true,\r\n                  items: result\r\n                });\r\n              },\r\n            )\r\n          }\r\n        }\r\n    render() { \r\n        const { items } = this.state; \r\n\r\n        return ( \r\n          <>\r\n            <div className=\"d-none w-100\" id=\"notFound\">\r\n              <h2 className=\"text-danger text-centert\">Data Not Found</h2>\r\n            </div>\r\n            <div className=\"country-list\">\r\n                {items.map(item => (\r\n                    <CountryItem key={item.numericCode} title={item.name} capital={item.capital} region={item.region} population={item.population} img={item.flag}/>\r\n                ))}\r\n            </div>\r\n          </>\r\n         );\r\n    }\r\n}\r\n\r\nexport default withRouter(CountryList); ","C:\\Users\\kezhe\\OneDrive\\Desktop\\rest-countries-API\\countries-api\\src\\component\\CountryItem.jsx",[],"C:\\Users\\kezhe\\OneDrive\\Desktop\\rest-countries-API\\countries-api\\src\\component\\CountryInner.jsx",["56"],{"ruleId":"57","severity":1,"message":"58","line":3,"column":44,"nodeType":"59","messageId":"60","endLine":3,"endColumn":50},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":39,"column":45,"nodeType":"67","messageId":"68","endLine":39,"endColumn":47},{"ruleId":"57","severity":1,"message":"69","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":20},{"ruleId":"65","severity":1,"message":"66","line":20,"column":48,"nodeType":"67","messageId":"68","endLine":20,"endColumn":50},{"ruleId":"65","severity":1,"message":"66","line":27,"column":46,"nodeType":"67","messageId":"68","endLine":27,"endColumn":48},{"ruleId":"65","severity":1,"message":"66","line":35,"column":75,"nodeType":"67","messageId":"68","endLine":35,"endColumn":77},{"ruleId":"65","severity":1,"message":"70","line":14,"column":35,"nodeType":"67","messageId":"68","endLine":14,"endColumn":37},{"ruleId":"65","severity":1,"message":"70","line":14,"column":85,"nodeType":"67","messageId":"68","endLine":14,"endColumn":87},{"ruleId":"65","severity":1,"message":"70","line":25,"column":42,"nodeType":"67","messageId":"68","endLine":25,"endColumn":44},{"ruleId":"65","severity":1,"message":"66","line":25,"column":76,"nodeType":"67","messageId":"68","endLine":25,"endColumn":78},{"ruleId":"65","severity":1,"message":"66","line":39,"column":37,"nodeType":"67","messageId":"68","endLine":39,"endColumn":39},{"ruleId":"65","severity":1,"message":"70","line":21,"column":41,"nodeType":"67","messageId":"68","endLine":21,"endColumn":43},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["71"],"no-negated-in-lhs",["72"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CountryInner' is defined but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]